/* creates the first layer: `body`.

Similar to how we have six levels of priority based on origin and importance,
cascade layers enable us to create sub-origin level of priority within any of
those origins.

*/
@layer layout {
    body {
      /* modify here */
    }
  }


/*
You can import more than one CSS file into a single layer. The following
declaration imports two separate files into a single social layer:

@import url(comments.css) layer(social);
@import url(sm-icons.css) layer(social);
*/

/*
To add styles to a named nested layer, use the dot notation:

@layer example.layout {
  main {
    width: 50vw;
  }
}
*/

.inline_content {
    display: flex;
    justify-content: center;
    width: 400px;
    position: calc();
}

.diviser {
    border-right: solid;
    border-color: black;
    margin: 3% 3px;
    border-width: 2px;
}

.in_center {
    position: relative;
    text-align: center;
    padding: 0px 5% 0% 5%;
    margin-left: 15%;
    margin-right: 15%;
    width: 60%;
}

/* it's best to quote font names that contains spaces to avoid confusion by the
interpreter to misunderstand with a reserve keyword os something   */
.font_dif {
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

/*
The font-size of an element is inherited from that element's parent element. This
all starts with the root element of the entire document — <html> — the standard
font-size of which is set to 16px across browsers. Any paragraph (or another
element that doesn't have a different size set by the browser) inside the root
element will have a final size of 16px. Other elements may have different default
sizes. For example, an h1 element has a size of 2em set by default, so it will
have a final size of 32px.
*/

/* we can set multiple shadows to the same text: */
.with_shadow {
  text-shadow:
    1px 1px 1px red, /* just separete with commas /*
    2px 2px 1px red;
}